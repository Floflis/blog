<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>seguridad on Blog de Floflis</title>
    <link>https://floflis.github.io/blog/es/tags/seguridad/</link>
    <description>Recent content in seguridad on Blog de Floflis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>(c) 2019-2020 Floflis Platform</copyright>
    <lastBuildDate>Sun, 23 Jun 2019 18:11:28 -0400</lastBuildDate>
    
	<atom:link href="https://floflis.github.io/blog/es/tags/seguridad/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Informes de seguridad Electron para las apps preinstaladas de Floflis</title>
      <link>https://floflis.github.io/blog/es/2019/06/informes-de-seguridad-electron-para-las-apps-preinstaladas-de-floflis/</link>
      <pubDate>Sun, 23 Jun 2019 18:11:28 -0400</pubDate>
      
      <guid>https://floflis.github.io/blog/es/2019/06/informes-de-seguridad-electron-para-las-apps-preinstaladas-de-floflis/</guid>
      <description>Hace unos días estudiaba sobre auditores de seguridad en Linux, primero comencé con la auditoría de aplicaciones de Electron.
La primera herramienta de auditoría (y actualmente la única que estoy usando) es Electronegativity por Doyensec.
Electronegativity había señalado vulnerabilidades en todas las aplicaciones. No sé si son realmente vulnerabilidades o solo consejos de mejores prácticas de JS.
Los he reportado a todos los desarrolladores, y parecían escépticos, y ignoraron. Pero me comprometo a tratar de corregir las vulnerabilidades en cualquier aplicación que desarrolle para Floflis, especialmente sus aplicaciones integradas.</description>
    </item>
    
  </channel>
</rss>